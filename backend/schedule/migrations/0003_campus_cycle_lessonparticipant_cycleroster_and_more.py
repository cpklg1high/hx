# Generated by Django 4.2.23 on 2025-09-15 05:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import schedule.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('students', '0003_alter_school_id_alter_student_academic_status_and_more'),
        ('schedule', '0002_attendance_gift_used_attendance_paid_used'),
    ]

    operations = [
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('code', models.CharField(blank=True, default='', max_length=20)),
                ('address', models.CharField(blank=True, default='', max_length=200)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'edu_campus',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Cycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term_type', models.CharField(choices=[('spring', '春季'), ('summer', '暑假'), ('autumn', '秋季'), ('winter', '寒假')], db_index=True, max_length=10)),
                ('year', models.PositiveSmallIntegerField(db_index=True)),
                ('name', models.CharField(max_length=80)),
                ('date_from', models.DateField()),
                ('date_to', models.DateField()),
                ('pattern', models.CharField(choices=[('weekly', 'weekly'), ('ab_fixed6', 'ab_fixed6'), ('ab_custom', 'ab_custom')], default='weekly', max_length=20)),
                ('rest_weekday', models.PositiveSmallIntegerField(default=7)),
                ('status', models.CharField(default='draft', max_length=12)),
                ('remark', models.CharField(blank=True, default='', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campus', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cycles', to='schedule.campus')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cycles', to='schedule.term')),
            ],
            options={
                'db_table': 'edu_cycle',
                'ordering': ['-year', '-date_from'],
            },
        ),
        migrations.CreateModel(
            name='LessonParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('trial', 'Trial'), ('temp', 'Temporary')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='schedule.lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_participations', to='students.student')),
            ],
        ),
        migrations.CreateModel(
            name='CycleRoster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('normal', 'normal'), ('trial', 'trial')], default='normal', max_length=10)),
                ('track', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B')], max_length=1, null=True)),
                ('note', models.CharField(blank=True, default='', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('class_group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cycle_rosters', to='schedule.classgroup')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('cycle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rosters', to='schedule.cycle')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cycle_rosters', to='students.student')),
            ],
            options={
                'db_table': 'edu_cycle_roster',
            },
        ),
        migrations.CreateModel(
            name='CyclePublishLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope', models.CharField(default='future_only', max_length=20)),
                ('mode', models.CharField(default='participants', max_length=20)),
                ('payload', schedule.models.JSONTextField(default=dict)),
                ('diff_stats', schedule.models.JSONTextField(default=dict)),
                ('published_at', models.DateTimeField(auto_now_add=True)),
                ('cycle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publish_logs', to='schedule.cycle')),
                ('published_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'edu_cycle_publish_log',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='CyclePublishItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('normal', 'normal'), ('trial', 'trial')], max_length=10)),
                ('track', models.CharField(blank=True, max_length=1, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cycle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publish_items', to='schedule.cycle')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cycle_publish_items', to='schedule.lesson')),
                ('participant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='schedule.lessonparticipant')),
                ('roster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publish_items', to='schedule.cycleroster')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cycle_publish_items', to='students.student')),
            ],
            options={
                'db_table': 'edu_cycle_publish_item',
            },
        ),
        migrations.AddField(
            model_name='room',
            name='campus',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='rooms', to='schedule.campus'),
        ),
        migrations.AddIndex(
            model_name='lessonparticipant',
            index=models.Index(fields=['lesson', 'student'], name='schedule_le_lesson__f9a683_idx'),
        ),
        migrations.AddIndex(
            model_name='lessonparticipant',
            index=models.Index(fields=['type'], name='schedule_le_type_8ed02f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='lessonparticipant',
            unique_together={('lesson', 'student')},
        ),
        migrations.AddIndex(
            model_name='cycleroster',
            index=models.Index(fields=['cycle', 'class_group'], name='edu_cycle_r_cycle_i_e8b3a8_idx'),
        ),
        migrations.AddIndex(
            model_name='cycleroster',
            index=models.Index(fields=['student'], name='edu_cycle_r_student_b9b7f8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cycleroster',
            unique_together={('cycle', 'class_group', 'student', 'track')},
        ),
        migrations.AddIndex(
            model_name='cyclepublishitem',
            index=models.Index(fields=['cycle', 'lesson'], name='edu_cycle_p_cycle_i_354183_idx'),
        ),
        migrations.AddIndex(
            model_name='cyclepublishitem',
            index=models.Index(fields=['student'], name='edu_cycle_p_student_98eb50_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cyclepublishitem',
            unique_together={('cycle', 'lesson', 'student')},
        ),
        migrations.AddIndex(
            model_name='cycle',
            index=models.Index(fields=['year', 'term_type', 'campus'], name='edu_cycle_year_3a7e34_idx'),
        ),
    ]
