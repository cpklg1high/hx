# Generated by Django 4.2.23 on 2025-08-21 09:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('students', '0003_alter_school_id_alter_student_academic_status_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_mode', models.CharField(choices=[('one_to_one', '一对一'), ('one_to_two', '一对二'), ('small_class', '小班')], db_index=True, max_length=20)),
                ('grade', models.PositiveSmallIntegerField(choices=[(1, '一年级'), (2, '二年级'), (3, '三年级'), (4, '四年级'), (5, '五年级'), (6, '预初'), (7, '初一'), (8, '初二'), (9, '初三'), (10, '高一'), (11, '高二'), (12, '高三')], db_index=True)),
                ('name', models.CharField(blank=True, default='', max_length=80)),
                ('capacity', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('status', models.CharField(default='active', max_length=10)),
                ('remark', models.CharField(blank=True, default='', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'edu_class_group',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('capacity', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, default='', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'edu_room',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('phase', models.CharField(choices=[('primary', '小学'), ('junior', '初中'), ('senior', '高中')], default='junior', max_length=10)),
            ],
            options={
                'db_table': 'edu_subject',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('type', models.CharField(choices=[('spring', '春季'), ('summer', '暑假'), ('autumn', '秋季'), ('winter', '寒假')], max_length=10)),
                ('year', models.PositiveSmallIntegerField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('remark', models.CharField(blank=True, default='', max_length=200)),
            ],
            options={
                'db_table': 'edu_term',
                'ordering': ['-year', 'start_date'],
                'indexes': [models.Index(fields=['year', 'type', 'is_active'], name='edu_term_year_9251b1_idx')],
            },
        ),
        migrations.CreateModel(
            name='ScheduleRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('weekly', 'weekly'), ('custom', 'custom')], max_length=10)),
                ('weekly_days_mask', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('weekly_start_time', models.TimeField(blank=True, null=True)),
                ('weekly_duration', models.PositiveIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('class_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='schedule.classgroup')),
            ],
            options={
                'db_table': 'edu_schedule_rule',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('duration_minutes', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('scheduled', '已排课'), ('finished', '已完成'), ('canceled', '已取消')], default='scheduled', max_length=10)),
                ('lock_attendance', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('class_group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lessons', to='schedule.classgroup')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='lessons', to='schedule.room')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='lessons', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'edu_lesson',
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.AddField(
            model_name='classgroup',
            name='room_default',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='classes', to='schedule.room'),
        ),
        migrations.AddField(
            model_name='classgroup',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='classes', to='schedule.subject'),
        ),
        migrations.AddField(
            model_name='classgroup',
            name='teacher_main',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teaching_classes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='classgroup',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='classes', to='schedule.term'),
        ),
        migrations.CreateModel(
            name='ClassEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('is_trial', models.BooleanField(default=False)),
                ('class_group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='student_enrollments', to='schedule.classgroup')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='class_enrollments', to='students.student')),
            ],
            options={
                'db_table': 'edu_class_enrollment',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('present', '签到'), ('leave', '请假'), ('absent', '缺席')], max_length=10)),
                ('deduct_unit', models.CharField(blank=True, choices=[('hours', '小时'), ('sessions', '节')], max_length=10, null=True)),
                ('deduct_qty', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('deduct_from', models.CharField(blank=True, max_length=10, null=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attendances', to='schedule.lesson')),
                ('operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attendances', to='students.student')),
            ],
            options={
                'db_table': 'edu_attendance',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='TeacherWorklog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_hours', models.DecimalField(decimal_places=2, max_digits=5)),
                ('rule_code', models.CharField(default='normal', max_length=50)),
                ('status', models.CharField(choices=[('pending', '待结算'), ('paid', '已结算')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='worklogs', to='schedule.lesson')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='worklogs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'edu_teacher_worklog',
                'ordering': ['-id'],
                'indexes': [models.Index(fields=['teacher', 'status'], name='edu_teacher_teacher_7f8602_idx')],
            },
        ),
        migrations.CreateModel(
            name='ScheduleCustomEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('duration_minutes', models.PositiveIntegerField()),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_entries', to='schedule.schedulerule')),
            ],
            options={
                'db_table': 'edu_schedule_custom_entry',
                'ordering': ['date', 'start_time'],
                'indexes': [models.Index(fields=['rule', 'date'], name='edu_schedul_rule_id_34dda7_idx')],
            },
        ),
        migrations.CreateModel(
            name='LessonLeave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(blank=True, default='', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leaves', to='schedule.lesson')),
                ('operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lesson_leaves', to='students.student')),
            ],
            options={
                'db_table': 'edu_lesson_leave',
                'ordering': ['-id'],
                'unique_together': {('lesson', 'student')},
            },
        ),
        migrations.AddIndex(
            model_name='lesson',
            index=models.Index(fields=['date', 'start_time'], name='edu_lesson_date_a5d67e_idx'),
        ),
        migrations.AddIndex(
            model_name='lesson',
            index=models.Index(fields=['class_group', 'date'], name='edu_lesson_class_g_7d416a_idx'),
        ),
        migrations.AddIndex(
            model_name='classgroup',
            index=models.Index(fields=['term', 'grade', 'course_mode'], name='edu_class_g_term_id_eb9e9b_idx'),
        ),
        migrations.AddConstraint(
            model_name='classenrollment',
            constraint=models.UniqueConstraint(condition=models.Q(('left_at__isnull', True)), fields=('student', 'class_group'), name='uniq_active_class_enrollment'),
        ),
        migrations.AlterUniqueTogether(
            name='attendance',
            unique_together={('lesson', 'student')},
        ),
    ]
